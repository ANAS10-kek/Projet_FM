@model Projet_FM.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<link href="~/Content/style-offers.css" rel="stylesheet" />
<section class="sec-showcase-offers">
    <div class="showcase-offers d-flex justify-content-center  align-items-center text-center">
        <div class=" text-light">
            <h1 class="display-3 text-light px-3">Stay Connected</h1>
            <br>
            <span class="text-light">
                <i class="fa fa-home" aria-hidden="true"></i><a class="text-light" href="">Home</a>
            </span>
        </div>
    </div>
</section>

<div class="text-light py-5 col-sm-8 m-auto container-fluid px-5 py-5 bg-dark rounded d-flex">
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "formRegister" }))
    {
        <div class="w-100 col-md-8 col-sm-8 m-auto container-fluid px-5 py-5 bg-dark rounded">
            <div class="">
                @Html.AntiForgeryToken()
                <div class="row btn-group-sm">
                    <div class="col-md-6 mb-3 form-group">
                        @Html.LabelFor(m => m.firstName, new { @class = "col-form-label" })
                        <div>
                            @Html.TextBoxFor(m => m.firstName, new { @class = "d-inline form-control  col-md-12" })
                        </div>
                    </div>
                    <div class="col-md-6 mb-3 form-group">
                        @Html.LabelFor(m => m.lastName, new { @class = "col-form-label" })
                        <div>
                            @Html.TextBoxFor(m => m.lastName, new { @class = "d-inline form-control  col-md-12" })
                        </div>
                    </div>
                </div>
                <div class="mb-3  form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-form-label" })
                    <div class="input-group ">
                        <span class="input-group-prepend">
                            <span class="input-group-text">@@</span>
                        </span>
                        <br />
                        @Html.TextBoxFor(m => m.UserName, new { @class = "d-block form-control  col-md-12" })
                    </div>
                </div>
                <div class="mb-3 form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-form-label" })
                    <div>
                        @Html.TextBoxFor(m => m.Email, new { @class = "d-inline form-control  col-md-12" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-form-label" })
                    <div>
                        @Html.PasswordFor(m => m.Password, new { @class = "d-inline form-control  col-md-12" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-form-label" })
                    <div>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "d-inline form-control  col-md-12" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-form-label" })
                    <div>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "d-inline form-control  col-md-12" })
                    </div>
                </div>
                <div class="form-group ">
                    @Html.LabelFor(m => m.Address, new { @class = "col-form-label" })
                    <div>
                        @Html.TextBoxFor(m => m.Address, new { @class = "d-inline form-control  col-md-12" })
                    </div>
                </div>
                <div class="row col-md-12 m-0 p-0 justify-content-between">
                    <div class="col-md-4 mb-3 d-flex flex-column m-0 p-1 form-group">
                        <label for="country">Country</label>
                        <div class="col-md-12 p-0">
                            <select name="Country" id="Country" class="form-control col-md-12">
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4 mb-3 d-flex flex-column m-0 p-1 form-group">
                        <label for="">State</label>
                        <div class="col-md-12 p-0">
                            <select name="State" id="State" class="form-control col-md-12">
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4 mb-3 d-flex flex-column m-0 p-1 form-group">
                        <label for="">City</label>
                        <div class="col-md-12 p-0">
                            <select name="City" id="City" class="form-control col-md-12">
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button class="btn btn-primary" value="" type="submit">Register  <i class="fa fa-sign-in" aria-hidden="true"></i></button>

                </div>
            </div>
            @Html.ValidationSummary("", new { @class = "text-danger" })
        </div>
    }
    <div>
        @Html.Partial("_ExternalLoginsListPartial", new Projet_FM.Models.ExternalLoginListViewModel())
    </div>
</div>


<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script>
    $(document).ready(function () {
        $('#formRegister').validate(
            {
                errorClass: 'help-block animation-slideDown text-danger',
                errorElement: 'span',
                errorPlacement: function (error, e) {
                    e.parents('.form-group > div').append(error);
                },
                highlight: function (e) {

                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'firstName': {
                        required: true
                    },
                    'lastName': {
                        required: true
                    },
                    'UserName': {
                        required: true
                    },
                    'Email': {
                        required: true,
                        email: true
                    },
                    'Password': {
                        required: true,
                        minlength: 6
                    },
                    'ConfirmPassword': {
                        required: true,
                        equalTo: "#Password"
                    },
                    'PhoneNumber': {
                        required: true,
                        matches: "[0-9]+"
                    },
                    'Address': {
                        required: true
                    },
                    'Country': {
                        required: true
                    },
                    'State': {
                        required: true
                    },
                    'City': {
                        required: true
                    },
                },
                messages: {
                    'firstName': {
                        required: "first Name is required"
                    },

                    'lastName': {
                        required: " last Name is required"
                    },
                    'UserName': {
                        required: "UserName is required"
                    },
                    'Email': {
                        required: "Email is required",
                        email: true
                    },
                    'Password': {
                        required: "Password is required",
                        minlength: "min lenght is 6 caractere"
                    },
                    'ConfirmPassword': {
                        required: "Confirm Password is required",
                        equalTo: "Password and Confirmation Password not much"
                    },
                    'PhoneNumber': {
                        required: "Phone Number is required",
                        matches: "[0-9]+"
                    },
                    'Address': {
                        required: "Address is required"
                    },
                    'Country': {
                        required: "Country is required"
                    },
                    'State': {
                        required: "State is required"
                    },
                    'City': {
                        required: "City is required"
                    }
                }
            });
    });
</script>
<script src="~/Scripts/MyScripts/DropDowlist_countries.js"></script>
